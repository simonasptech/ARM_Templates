{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Log Analytics Workspace."
            }
        },
        "workspaceResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group where the Log Analytics Workspace resides."
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Virtual Machine to associate the DCR with."
            }
        },
        "vmResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group of the Virtual Machine."
            }
        },
        "vmResourceId": {
            "type": "string",
            "metadata": {
                "description": "Full resource ID of the Virtual Machine (for associating the DCR)."
            }
        },
        "dcrName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Data Collection Rule."
            }
        },
        "dcrAssociationName": {
            "type": "string",
            "metadata": {
                "description": "Name of the DCR Association."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Insights/dataCollectionRules",
            "apiVersion": "2023-03-11",
            "name": "[parameters('dcrName')]",
            "location": "[parameters('location')]",
            "properties": {
                "dataSources": {
                    "syslog": [
                        {
                            "name": "syslogSource",
                            "streams": [
                                "Microsoft-Syslog"
                            ],
                            "facilityNames": [
                                "*"
                            ],
                            "logLevels": [
                                "*"
                            ]
                        }
                    ]
                },
                "destinations": {
                    "logAnalytics": [
                        {
                            "workspaceResourceId": "[resourceId(parameters('workspaceResourceGroup'), 'Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]",
                            "name": "laDestination"
                        }
                    ]
                },
                "dataFlows": [
                    {
                        "streams": [
                            "Microsoft-Syslog"
                        ],
                        "destinations": [
                            "laDestination"
                        ],
                        "transformKql": "source | where SyslogMessage has 'logver=' | extend logver = extract('logver=([0-9]+)', 1, SyslogMessage), timestamp = extract('timestamp=([0-9]+)', 1, SyslogMessage), devname = extract('devname=\\\"([^\\\"]+)\\\"', 1, SyslogMessage), devid = extract('devid=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    vd = extract('vd=\\\"?([^\\\\s\\\"]+)\\\"?', 1, SyslogMessage),    event_date = extract('date=([0-9\\\\-]+)', 1, SyslogMessage),    event_time = extract('time=([0-9:]+)', 1, SyslogMessage), tz = extract('tz=\\\"?([^\\\"]+)\\\"?', 1, SyslogMessage),    logid = extract('logid=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    event_type = extract('type=([a-zA-Z]+)', 1, SyslogMessage),    subtype = extract('subtype=([a-zA-Z]+)', 1, SyslogMessage),    level = extract('level=([a-zA-Z]+)', 1, SyslogMessage),    logdesc = extract('logdesc=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    msg = extract('msg=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    action = extract('action=([a-zA-Z]+)', 1, SyslogMessage),    remip = extract('remip=([0-9.]+)', 1, SyslogMessage),    locip = extract('locip=([0-9.]+)', 1, SyslogMessage),   remport = toint(extract('remport=([0-9]+)', 1, SyslogMessage)),    locport = toint(extract('locport=([0-9]+)', 1, SyslogMessage)),    outintf = extract('outintf=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    cookies = extract('cookies=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    user = extract('user=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    group = extract('group=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    useralt = extract('useralt=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    xauthuser = extract('xauthuser=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    xauthgroup = extract('xauthgroup=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    assignip = extract('assignip=([^\\\\s\\\"]+)', 1, SyslogMessage),    vpntunnel = extract('vpntunnel=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),    status = extract('status=([a-zA-Z]+)', 1, SyslogMessage),   init = extract('init=([a-zA-Z]+)', 1, SyslogMessage),    mode = extract('mode=([a-zA-Z]+)', 1, SyslogMessage),    dir = extract('dir=([a-zA-Z]+)', 1, SyslogMessage),    stage = toint(extract('stage=([0-9]+)', 1, SyslogMessage)),    role = extract('role=([a-zA-Z]+)', 1, SyslogMessage),    result = extract('result=([A-Z]+)', 1, SyslogMessage),   advpnsc = toint(extract('advpnsc=([0-9]+)', 1, SyslogMessage))",
                        "outputStream": "Custom-fortiVPN_CL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/dataCollectionRuleAssociations",
            "apiVersion": "2023-03-11",
            "name": "[parameters('dcrAssociationName')]",
            "scope": "[parameters('vmResourceId')]",
            "properties": {
                "description": "Association for syslog DCR",
                "dataCollectionRuleId": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dcrName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dcrName'))]"
            ]
        }
    ],
    "outputs": {
        "dcrId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dcrName'))]"
        },
        "dcrAssociationId": {
            "type": "string",
            "value": "[extensionResourceId(parameters('vmResourceId'), 'Microsoft.Insights/dataCollectionRuleAssociations', parameters('dcrAssociationName'))]"
        },
        "resolvedVmResourceId": {
            "type": "string",
            "value": "[resourceId(parameters('vmResourceGroup'), 'Microsoft.Compute/virtualMachines', parameters('vmName'))]"
        }
    }
}