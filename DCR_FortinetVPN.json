{  
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/subscriptionDeploymentTemplate.json#",  
  "contentVersion": "1.0.0.0",  
  "parameters": {  
    "location": {  
      "type": "string",  
      "metadata": {  
        "description": "Location for all resources."  
      }  
    },  
    "workspaceName": {  
      "type": "string",  
      "metadata": {  
        "description": "Name of the Log Analytics Workspace."  
      }  
    },  
    "workspaceResourceGroup": {  
      "type": "string",  
      "metadata": {  
        "description": "Resource group where the Log Analytics Workspace resides."  
      }  
    },  
    "vmName": {  
      "type": "string",  
      "metadata": {  
        "description": "Name of the Virtual Machine to associate the DCR with."  
      }  
    },  
    "vmResourceGroup": {  
      "type": "string",  
      "metadata": {  
        "description": "Resource group of the Virtual Machine."  
      }  
    },  
    "vmResourceId": {  
      "type": "string",  
      "metadata": {  
        "description": "Full resource ID of the Virtual Machine (for associating the DCR)."  
      }  
    },  
    "dcrName": {  
      "type": "string",  
      "metadata": {  
        "description": "Name of the Data Collection Rule."  
      }  
    },  
    "dcrAssociationName": {  
      "type": "string",  
      "metadata": {  
        "description": "Name of the DCR Association."  
      }  
    }  
  },  
  "resources": [  
    {  
      "type": "Microsoft.Insights/dataCollectionRules",  
      "apiVersion": "2023-03-11",  
      "name": "[parameters('dcrName')]",  
      "location": "[parameters('location')]",  
      "properties": {  
        "dataSources": {  
          "syslog": [  
            {  
              "name": "syslogSource",  
              "streams": [  
                "Microsoft-Syslog"  
              ],  
              "facilityNames": [  
                "*"  
              ],  
              "logLevels": [  
                "*"  
              ]  
            }  
          ]  
        },  
        "destinations": {  
          "logAnalytics": [  
            {  
              "workspaceResourceId": "[resourceId(parameters('workspaceResourceGroup'), 'Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]",  
              "name": "laDestination"  
            }  
          ]  
        },  
        "dataFlows": [  
          {  
            "streams": [  
              "Microsoft-Syslog"  
            ],  
            "destinations": [  
              "laDestination"  
            ],
            "transformKql": "source\n| where SyslogMessage has 'logver='\n| extend\n    logver = extract('logver=([0-9]+)', 1, SyslogMessage),\n    timestamp = extract('timestamp=([0-9]+)', 1, SyslogMessage),\n    devname = extract('devname=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    devid = extract('devid=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    vd = extract('vd=\\\"?([^\\\\s\\\"]+)\\\"?', 1, SyslogMessage),\n    event_date = extract('date=([0-9\\\\-]+)', 1, SyslogMessage),\n    event_time = extract('time=([0-9:]+)', 1, SyslogMessage),\n    eventtime = extract('eventtime=([0-9]+)', 1, SyslogMessage),\n    tz = extract('tz=\\\"?([^\\\"]+)\\\"?', 1, SyslogMessage),\n    logid = extract('logid=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    event_type = extract('type=([a-zA-Z]+)', 1, SyslogMessage),\n    subtype = extract('subtype=([a-zA-Z]+)', 1, SyslogMessage),\n    level = extract('level=([a-zA-Z]+)', 1, SyslogMessage),\n    logdesc = extract('logdesc=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    msg = extract('msg=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    action = extract('action=([a-zA-Z]+)', 1, SyslogMessage),\n    remip = extract('remip=([0-9\\.]+)', 1, SyslogMessage),\n    locip = extract('locip=([0-9\\.]+)', 1, SyslogMessage),\n    remport = toint(extract('remport=([0-9]+)', 1, SyslogMessage)),\n    locport = toint(extract('locport=([0-9]+)', 1, SyslogMessage)),\n    outintf = extract('outintf=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    cookies = extract('cookies=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    user = extract('user=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    group = extract('group=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    useralt = extract('useralt=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    xauthuser = extract('xauthuser=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    xauthgroup = extract('xauthgroup=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    assignip = extract('assignip=([^\\\\s\\\"]+)', 1, SyslogMessage),\n    vpntunnel = extract('vpntunnel=\\\"([^\\\"]+)\\\"', 1, SyslogMessage),\n    status = extract('status=([a-zA-Z]+)', 1, SyslogMessage),\n    init = extract('init=([a-zA-Z]+)', 1, SyslogMessage),\n    mode = extract('mode=([a-zA-Z]+)', 1, SyslogMessage),\n    dir = extract('dir=([a-zA-Z]+)', 1, SyslogMessage),\n    stage = toint(extract('stage=([0-9]+)', 1, SyslogMessage)),\n    role = extract('role=([a-zA-Z]+)', 1, SyslogMessage),\n    result = extract('result=([A-Z]+)', 1, SyslogMessage),\n    advpnsc = toint(extract('advpnsc=([0-9]+)', 1, SyslogMessage))",
            "outputStream": "Custom-fortiVPN_CL"
          }  
        ]  
      }  
    },  
    {  
      "type": "Microsoft.Insights/dataCollectionRuleAssociations",  
      "apiVersion": "2023-03-11",  
      "name": "[parameters('dcrAssociationName')]",  
      "scope": "[parameters('vmResourceId')]",  
      "properties": {  
        "description": "Association for syslog DCR",  
        "dataCollectionRuleId": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dcrName'))]"  
      },  
      "dependsOn": [  
        "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dcrName'))]"  
      ]  
    }  
  ],  
  "outputs": {  
    "dcrId": {  
      "type": "string",  
      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dcrName'))]"  
    },  
    "dcrAssociationId": {  
      "type": "string",  
      "value": "[extensionResourceId(parameters('vmResourceId'), 'Microsoft.Insights/dataCollectionRuleAssociations', parameters('dcrAssociationName'))]"  
    },  
    "resolvedVmResourceId": {  
      "type": "string",  
      "value": "[resourceId(parameters('vmResourceGroup'), 'Microsoft.Compute/virtualMachines', parameters('vmName'))]"  
    }  
  }  
}  